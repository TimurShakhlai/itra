{"version":3,"sources":["Hooks/httpHook.js","context/Context.js","Pages/Table.js","Pages/Auth.js","Routes/routes.js","App.js","Hooks/authHook.js","reportWebVitals.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","Url","a","method","body","headers","JSON","stringify","fetch","responce","json","Data","ok","Error","message","Context","createContext","token","userid","login","logout","isAuth","isBanned","userEmail","columns","Table","inBan","setBan","auth","useContext","users","setUsers","userList","Array","Ban","useEffect","data","console","log","getData","e","userId","localStorage","setItem","parse","getItem","getStatus","lockUser","email","type","delUser","checked","setCheck","className","onClick","map","user","isSelected","then","r","_id","onChange","column","User","name","status","registrationDate","lastLoginDate","Auth","props","password","form","setForm","formHandler","event","target","value","registrationHandler","loginHandler","htmlFor","id","placeholder","disabled","routes","exact","path","to","App","setToken","setId","ban","setMail","jwtToken","Id","userMail","removeItem","useAuth","document","title","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.009eaa60.chunk.js","sourcesContent":["import React, {useState, useCallback} from \"react\";\r\nexport default function useHttp(){\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError]=useState(null)\r\n\r\n    const request = useCallback(async (Url, method = 'GET', body = null, headers = {})=>{\r\n        setLoading(true)\r\n        try{\r\n            headers['Content-Type'] = 'application/json'\r\n            if(body){\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n            let responce\r\n            if(method == 'GET'){\r\n                responce = await fetch(Url,{method,headers})\r\n            } else {\r\n                responce = await fetch(Url,{method,body,headers})\r\n            }\r\n            const Data = await responce.json()\r\n            if(!responce.ok){\r\n                throw new Error(Data.message || \"Трабл в хуке\")\r\n            }\r\n            setLoading(false)\r\n            return Data\r\n        }catch (errors){\r\n            setLoading(false)\r\n            setError(errors.message)\r\n            throw errors\r\n        }\r\n    },[])\r\n    return{loading, request, error}\r\n}","import {createContext} from 'react'\r\n\r\nfunction login(){}\r\nfunction logout(){}\r\nexport const Context = createContext({\r\n    token : null,\r\n    userid:null,\r\n    login:login,\r\n    logout:logout,\r\n    isAuth:false,\r\n    isBanned:false,\r\n    userEmail:null\r\n})","import React, {useContext, useEffect, useState} from \"react\";\r\nimport 'react-bootstrap';\r\nimport './Pages.css'\r\nimport useHttp from \"../Hooks/httpHook\";\r\nimport {Context} from \"../context/Context\";\r\nconst columns = [\"Id\",\"Name\",\"Email\",\"isBanned\",\"Registration Date\",\"Last Login Date\"]\r\n\r\nexport default function Table(){\r\n    const {request} = useHttp()\r\n    const [inBan, setBan] = useState(false)\r\n    const auth = useContext(Context)\r\n    let i = 0\r\n    const arr = ['1','2','3']\r\n    let [users, setUsers] = useState([])\r\n    let userList = new Array()\r\n    const [mail, setEmail] = useState(null)\r\n    const UserInBan = () =>{\r\n        console.log(auth.userId)\r\n        const getStatus = async ()=>{\r\n            const data = await request('/api/auth/can/'+auth.userId, 'GET')\r\n            localStorage.setItem('inBan',JSON.stringify({inBan:data.message}))\r\n            const {inBan} = JSON.parse(localStorage.getItem('inBan'))\r\n            setBan(inBan)\r\n        }\r\n        getStatus()\r\n        return inBan\r\n    }\r\n    const Data =useEffect( ()=>{\r\n        Ban()\r\n        if(!inBan){\r\n            try {\r\n                const getData = async () => {\r\n                    const data = await request('/api/auth/getDbData', 'GET')\r\n                    console.log(users)\r\n                    setUsers(data)\r\n                    console.log(users)\r\n                    userList = data\r\n                    return data\r\n                }\r\n                const data = getData()\r\n                setUsers(userList)\r\n                console.log(users)\r\n                return data\r\n            }\r\n            catch (e) {\r\n                    console.log(e.message)\r\n                }\r\n        } else {\r\n            auth.logout()\r\n        }\r\n    },[])\r\n    const isBanned = (status)=>{\r\n        if (status)\r\n        {\r\n            return 'true'\r\n        } else {\r\n            return 'false'\r\n        }\r\n    }\r\n    const Ban = ()=>{\r\n        UserInBan()\r\n    }\r\n\r\n    const ChangeBox = (User) =>{\r\n        Ban()\r\n        if(!inBan)\r\n            {setUsers(users.map(user=>{\r\n                if(user==User){\r\n                    user.isSelected=!(user.isSelected)\r\n                }\r\n                return user\r\n            }))} else{\r\n                auth.logout()\r\n            }\r\n\r\n    }\r\n    const lockUser = async (email, type) =>{\r\n        let Url\r\n        if (type){\r\n            Url = '/api/auth/update/'+email +'/ban'\r\n        } else {\r\n            Url = '/api/auth/update/'+email +'/unban'\r\n        }\r\n        const data = await request(Url, 'PUT')\r\n    }\r\n    const UnBanUsers = () =>{\r\n        Ban()\r\n        if (!inBan){\r\n            setUsers(users.map(user=>{\r\n                if(user){\r\n                    if(user.isSelected){\r\n                        user.isBanned = false;\r\n                        lockUser(user.email,false).then(r=>console.log('Пользователь разблокирован'))\r\n                    }\r\n                    return user\r\n                }\r\n            }))\r\n        } else {\r\n            auth.logout()\r\n        }\r\n    }\r\n    const BanUsers = ()=>{\r\n        Ban()\r\n        if (!inBan){\r\n            setUsers(users.map(user=>{\r\n                if(user){\r\n                    if(user.isSelected){\r\n                        if(user._id==auth.userId){\r\n                            console.log('ban yourself')\r\n                            auth.logout()\r\n                        }\r\n                        user.isBanned = true;\r\n                        lockUser(user.email,true).then(r=>console.log('Пользователь заблокирован'))\r\n                    }\r\n                    return user\r\n                }\r\n            }))\r\n        } else {\r\n            auth.logout()\r\n        }\r\n    }\r\n    const delUser =async (email) =>{\r\n        const Url = '/api/auth/delete/'+email\r\n        const data = await request(Url, 'DELETE')\r\n        return data\r\n    }\r\n    const DeleteUsers= ()=> {\r\n        Ban()\r\n\r\n        if (!inBan){\r\n            setUsers(users.map(user => {\r\n                if (user){\r\n                    if (user.isSelected) {\r\n                        delUser(user.email).then(r => console.log('Пользователь удалён'))\r\n                        if(user._id == auth.userId){\r\n                            auth.logout()\r\n                        }\r\n                    } else {\r\n                        return user\r\n                    }\r\n                }\r\n            }))\r\n        } else {\r\n            auth.logout()\r\n        }\r\n    }\r\n    const [checked, setCheck] = useState(false)\r\n    const SellectAll=()=>{\r\n        Ban()\r\n        if (!inBan){\r\n            setCheck(!checked)\r\n            setUsers(users.map(user=>{\r\n                if(user && !checked){\r\n                    user.isSelected = true\r\n                } else if(user && checked){\r\n                    user.isSelected = false\r\n                }\r\n                return user\r\n            }))\r\n        } else{\r\n            auth.logout()\r\n        }\r\n    }\r\nreturn(\r\n    <div>\r\n        {console.log(users)}\r\n        <div className=\"row\">\r\n            <div className=\"col-1\" />\r\n            <div className=\"col-1\"><button className=\"btn btn-danger\" onClick={()=>DeleteUsers()}>Удалить</button></div>\r\n            <div className=\"col-2\"/>\r\n            <div className=\"col-1\"><button className=\"btn btn-warning\" onClick={()=>UnBanUsers()}>Разблокировать</button></div>\r\n            <div className=\"col-2\"/>\r\n            <div className=\"col-1\"><button className=\"btn btn-dark\" onClick={()=>BanUsers()}>Заблокировать</button></div>\r\n            <div className=\"col-2\"/>\r\n            <div className=\"col-1\"><button className=\"btn btn-dark\" onClick={()=>auth.login()}>SignOut</button></div>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered table-hover\">\r\n            <thead>\r\n            <tr>\r\n                <th><input type=\"checkbox\" checked={checked} onChange={()=>SellectAll()}/></th>\r\n                {\r\n                    columns.map(column=><th>{column}</th>)\r\n                }\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {users.map(user=> {\r\n                if(user){\r\n                    return(\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"checkbox\" checked={user.isSelected} onChange={() => ChangeBox(user)}/></td>\r\n                            <td>\r\n                                {user._id}\r\n                            </td>\r\n                            <td>\r\n                                {user.name}\r\n\r\n                            </td>\r\n                            <td>\r\n                                {user.email}\r\n                            </td>\r\n                            <td>\r\n                                {isBanned(user.isBanned)}\r\n                            </td>\r\n                            <td>\r\n                                {user.registrationDate}\r\n                            </td>\r\n                            <td>\r\n                                {user.lastLoginDate}\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                }\r\n            })}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n","import React, {useContext, useState} from \"react\";\r\nimport 'react-bootstrap'\r\nimport './Pages.css'\r\nimport useHttp from \"../Hooks/httpHook\";\r\nimport {Context} from \"../context/Context\";\r\nexport default function Auth(props){\r\n    const auth = useContext(Context)\r\n    const {loading, request} = useHttp()\r\n    const [form, setForm] = useState({\r\n        email: '', password: '',name:''\r\n    })\r\n\r\n    const formHandler = (event) =>{\r\n        setForm({...form,[event.target.name]: event.target.value})\r\n        console.log(form)\r\n    }\r\n\r\n    const registrationHandler = async () =>{\r\n            try {\r\n                const {email, password, name} = {...form}\r\n                const data = await request('/api/auth/register', 'POST', {email,password,name},{})\r\n                if(data.message=='Пользователь создан'){\r\n                    console.log('Hi')\r\n                    auth.login(data.token,data.userId,data.isBanned,data.userEmail)\r\n                }\r\n            } catch (e) {}\r\n    }\r\n    const loginHandler = async () =>{\r\n        try {\r\n            const {email, password} = {...form}\r\n            const data = await request('/api/auth/login', 'POST', {email,password},{})\r\n            auth.login(data.token,data.userId, data.isBanned, data.userEmail)\r\n        } catch (e) {}\r\n    }\r\n    return(\r\n        <div className=\"background blue\">\r\n            <div className=\"container row mt-5\">\r\n                <div className=\"col-5 card\">\r\n                    <form>\r\n                        <h2 className=\"card-title\">LogIn</h2>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"InputEmail\" htmlFor=\"email\">Email</label>\r\n                                <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\"\r\n                                       onChange={formHandler}/>\r\n                                <small id=\"emailHelper\" className=\"form-text text-muted\">You should enter your email in this\r\n                                    row</small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"InputPassword\" htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\"\r\n                                       name=\"password\"\r\n                                       onChange={formHandler}/>\r\n                                <small id=\"passwordHelper\" className=\"form-text text-muted\">You should enter your password in this row</small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                            <button className=\"btn btn-primary\" disabled={loading} onClick={loginHandler}>Войти</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-2\"> </div>\r\n                <div className=\"col-5 card\">\r\n                    <form>\r\n                        <h2 className=\"card-title\">Register</h2>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"InputEmail\" htmlFor=\"email\">Email</label>\r\n                                <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" name=\"email\"\r\n                                       onChange={formHandler}/>\r\n                                <small id=\"emailHelper\" className=\"form-text text-muted\">You should enter your email in this\r\n                                    row</small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"InputName\" htmlFor=\"name\">Name</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"text\" placeholder=\"Enter your name\" name=\"name\"\r\n                                       onChange={formHandler}/>\r\n                                <small id=\"emailHelper\" className=\"form-text text-muted\">You should enter your email in this\r\n                                    row</small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"InputPassword\" htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password\"\r\n                                       name=\"password\"\r\n                                       onChange={formHandler}/>\r\n                                <small id=\"passwordHelper\" className=\"form-text text-muted\">You should enter your password in this row</small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                            <button className=\"btn btn-primary\" disabled={loading} onClick={registrationHandler}>Регистрация</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\"\r\nimport Table from \"../Pages/Table\";\r\nimport Auth from \"../Pages/Auth\";\r\nexport default function routes(isAuth){\r\n    if(isAuth){\r\n        return(\r\n            <div>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path=\"/table\">\r\n                            <Table></Table>\r\n                        </Route>\r\n                        <Redirect to=\"/table\" />\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport 'materialize-css'\r\nimport './App.css';\r\nimport routes from './Routes/routes'\r\nimport useAuth from \"./Hooks/authHook\";\r\nimport {Context} from './context/Context'\r\nfunction App() {\r\n  const {token,login,logout,userId, ban} = useAuth()\r\n  const isAuth = ((!!token) && !ban)\r\n    {document.title = 'UserDbTable'}\r\n  return (\r\n      <Context.Provider value={{login,logout,userId,token, isAuth, ban}}>\r\n        <div className=\"container\">\r\n          {routes(isAuth)}\r\n        </div>\r\n      </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, {useState, useCallback, useEffect} from \"react\";\r\nexport default function  useAuth(){\r\n    const [token,setToken] = useState(null)\r\n    const [userId,setId] = useState(null)\r\n    const [ban, setBan] = useState(false)\r\n    const [mail, setMail] = useState(null)\r\n    const login = useCallback((jwtToken, Id, isBanned, userMail)=>{\r\n        setToken(jwtToken)\r\n        setId(Id)\r\n        setBan(isBanned)\r\n        setMail(userMail)\r\n        if(!isBanned){\r\n            localStorage.setItem('userData',JSON.stringify({userId:Id,token:jwtToken, isBanned:isBanned, userEmail:userMail}))\r\n            localStorage.setItem('inBan', JSON.stringify({inBan:isBanned}))\r\n        }\r\n    },[])\r\n    const logout = useCallback(()=>{\r\n        setId(null)\r\n        setToken(null)\r\n        setBan(false)\r\n        localStorage.removeItem('userData')\r\n        localStorage.removeItem('inBan')\r\n    },[])\r\n    useEffect(()=>{\r\n        const Data = JSON.parse(localStorage.getItem('userData'))\r\n        if (Data && Data.token && !(Data.isBanned)){\r\n            login(Data.token,Data.userId, Data.isBanned,Data.userEmail)\r\n        }\r\n    }, [login])\r\n    return {token,userId, login,logout, ban}\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}